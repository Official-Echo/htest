#import Data.Function

Null 1 2 3
([((1, Nothing), [2])], 3)

(Term 'a') 1 2 3
([((1, Just 'a'), [2])], 3)

(Seq (Term 'a') (Term 'b')) 1 2 3 & (\ (f, s) -> (L.sort f, s))
([((1, Just 'a'), [3]), ((3, Nothing), [4]), ((4, Just 'b'), [2])] & L.sort, 5)

(Alt (Term 'a') (Term 'b')) 1 2 3 & (\ (f, s) -> (L.sort f, s))
([((1, Nothing), [3, 5]), ((3, Just 'a'), [4]), ((4, Nothing), [2]), ((5, Just 'b'), [6]), ((6, Nothing), [2])] & L.sort, 7)

(Rep (Term 'a')) 1 2 3 & (\ (f, s) -> (L.sort f, s))
([((1, Nothing), [2, 3]), ((3, Just 'a'), [4]), ((4, Nothing), [2, 3])] & L.sort, 5)

Null 10 20 30 & (\ (f, s) -> (L.sort f, s))
([((10, Nothing), [20])] & L.sort, 30)

(Term 'z') 10 20 30 & (\ (f, s) -> (L.sort f, s))
([((10, Just 'z'), [20])] & L.sort, 30)

(Seq (Term 'x') (Term 'y')) 10 20 30 & (\ (f, s) -> (L.sort f, s))
([((10, Just 'x'), [30]), ((30, Nothing), [31]), ((31, Just 'y'), [20])] & L.sort, 32)

(Alt (Term 'x') (Term 'y')) 10 20 30 & (\ (f, s) -> (L.sort f, s))
([((10, Nothing), [30, 32]), ((30, Just 'x'), [31]), ((31, Nothing), [20]), ((32, Just 'y'), [33]), ((33, Nothing), [20])] & L.sort, 34)

(Rep (Term 'x')) 10 20 30 & (\ (f, s) -> (L.sort f, s))
([((10, Nothing), [20, 30]), ((30, Just 'x'), [31]), ((31, Nothing), [20, 30])] & L.sort, 32)